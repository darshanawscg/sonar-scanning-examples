<project name="codeAnnotation" basedir="." default="build"
     xmlns:ivy="antlib:org.apache.ivy.ant"
     xmlns:jacoco="antlib:org.jacoco.ant"
>

  <record name="ant.log" action="start" append="false" />
    
  <path id="testCompilationPath">
    <fileset dir="lib" includes="*.jar"/>
    <pathelement path="target/classes"/>
  </path>

  <path id="testExecutionPath">
    <fileset dir="lib" includes="*.jar"/>
    <pathelement path="target/classes"/>
    <pathelement path="target/test-classes"/>
  </path>


  <property name="ivy.install.version" value="2.3.0"/>
  <property name="jsch.install.version" value="0.1.49"/>
  <property name="ivy.jar.dir" value="${basedir}/ivy"/>
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
  <property name="jsch.jar.file" value="${ivy.jar.dir}/jsch.jar"/>
  <property name="build.dir" value="build"/>
  <property name="src.dir" value="src"/>

  <target name="download-ivy" unless="skip.download">
    <mkdir dir="${ivy.jar.dir}"/>
    <echo message="installing ivy..."/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
     dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="download-jsch" unless="skip.download">
    <mkdir dir="${ivy.jar.dir}"/>
    <echo message="installing jsch..."/>
    <get src="http://repo1.maven.org/maven2/com/jcraft/jsch/${jsch.install.version}/jsch-${jsch.install.version}.jar" 
     dest="${jsch.jar.file}" usetimestamp="true"/>
  </target>
    
  <target name="install-jsch" depends="download-jsch">
  </target>
    
  <target name="install-ivy" depends="download-ivy" 
      description="--> install ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" 
         uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <target name="resolve-ivy" depends="install-ivy,install-jsch" description="Resolve library dependencies">
    <ivy:retrieve/>
    <echo>ivy.default.ivy.user.dir is ${ivy.default.ivy.user.dir}</echo>
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml"> ➊
        <classpath refid="testExecutionPath"/>
    </taskdef>
    <taskdef classname="JFlex.anttask.JFlexTask" name="jflex">
        <classpath refid="testExecutionPath"/>
    </taskdef>
  </target>

  <target name="generateSource" depends="resolve-ivy">
    <mkdir dir="target/gen/java"/>
    <jflex file="src/main/jflex/code2html.flex"
       destdir="target/gen/java"/>
    <jflex file="src/main/jflex/code2tex.flex"
       destdir="target/gen/java"/>
    <jflex file="src/main/jflex/list2html.flex"
       destdir="target/gen/java"/>
    <jflex file="src/main/jflex/list2tex.flex"
       destdir="target/gen/java"/>
  </target>
  

  <target name="compile" depends="generateSource">   ➋
    <mkdir dir="target/classes"/>
    <javac srcdir="target/gen/java" destdir="target/classes" debug="true"
       source="1.6" includeantruntime="false"/>
    <javac srcdir="src/main/java" destdir="target/classes" debug="true"
       source="1.6" includeantruntime="false"/>
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="target/test-classes"/>
    <javac srcdir="src/test/java" destdir="target/test-classes" debug="true"
       source="1.6" includeantruntime="false">
      <classpath refid="testCompilationPath"/>
    </javac>
  </target>

  <target name="test" depends="compile-tests">
    <mkdir dir="target/test-results/details"/>
    <jacoco:coverage destfile="target/jacoco.exec">    ➌
      <junit printsummary="yes" 
         haltonfailure="yes" fork="yes"
         >
    <classpath refid="testExecutionPath"/>
    <formatter type="xml"/>
    <batchtest todir="target/test-results/details">
      <fileset dir="target/test-classes">
        <include name="**/*Test*.class"/>
      </fileset>
    </batchtest>
      </junit>
    </jacoco:coverage>
    <junitreport todir="target/test-results">
      <fileset dir="target/test-results/details">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="target/test-results/html"/>
    </junitreport>
  </target>

  <target name="coverageReport" depends="test">
    <jacoco:report>                ➍
        <executiondata>
            <file file="target/jacoco.exec"/>  ➎
        </executiondata>
                           
    <structure name="Code Annotation Project"> ➏
      <classfiles>
        <fileset dir="target/classes"/>
        <fileset dir="target/test-classes"/>
      </classfiles>
      <sourcefiles encoding="UTF-8">
        <fileset dir="src/main/java"/>
        <fileset dir="src/test/java"/>
        <fileset dir="target/gen/java"/>
      </sourcefiles>
        </structure>
                           
        <html destdir="target/coverageReport"/>   ➐
                           
    </jacoco:report>
  </target>

  <target name="build"  depends="coverageReport">
    <jar destfile="codeAnnotation.jar" basedir="target/classes">
        <manifest>
            <attribute name="Main-Class"
                       value="edu.odu.cs.code2html.Code2HTML"/>
        </manifest>
    </jar>
    <zip destfile="target/codeAnnotation-src.zip">
      <fileset dir=".">
        <include name="*.xml"/>
        <include name="test.cpp"/>
        <include name="*.css.cpp"/>
        <include name="src/**/*"/>
        <exclude name="**/*~"/>
        <exclude name="target/**/*"/>
      </fileset>
    </zip>
  </target>

  <target name="publish" depends="build">
    <ivy:retrieve/>
    <ivy:publish resolver="Forge350Publish"
         status="release"
         update="true"
         overwrite="true"
         publishivy="true">
      <artifacts pattern="[artifact].[ext]"/>
    </ivy:publish>
  </target>

  <target name="clean">
    <delete dir="target"/>
  </target>

  <target name="cleaner" depends="clean">
    <delete dir="lib"/>
  </target>

  <target name="cleanest" depends="cleaner">
    <delete dir="ivy"/>
  </target>
  
</project>
